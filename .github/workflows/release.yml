name: Release

on:
  push:
    branches: [release-*]

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

jobs:
  prepare:
    name: Prepare
    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Prepare branch
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout -b workflow-$GITHUB_RUN_ID
          versionSnapshot=`grep 'version=' gradle.properties | sed 's/version=\([^-]*\)/\1/'`
          versionRelease=`echo $versionSnapshot | sed 's/\([^-]*\)-SNAPSHOT/\1/'`
          versionSnapshotNext=`echo $versionSnapshot | perl -pe 's/^((\d+\.)*)(\d+)(.*)$/$1.($3+1).$4/e'`
          echo "$versionSnapshot -> $versionRelease  -> $versionSnapshotNext"
          sed -i "s/version=$versionSnapshot/version=$versionRelease/" gradle.properties
          git commit -am "[skip-ci] Generate release version"
          sed -i "s/version=$versionRelease/version=$versionSnapshotNext/" gradle.properties
          git commit -am "[skip-ci] Generate next snapshot version"
          git push origin HEAD

  build-java:
    name: Build Java ${{ matrix.java }} (${{ matrix.os }})
    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') }}
    needs: prepare
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java: [ '8' ]
        os: [ 'ubuntu-latest', 'windows-latest', 'macos-latest' ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Checkout branch (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git fetch
          git checkout -b workflow-$env:GITHUB_RUN_ID origin/workflow-$env:GITHUB_RUN_ID~1
      - name: Checkout branch (Linux/MacOS)
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git fetch
          git checkout -b workflow-$GITHUB_RUN_ID origin/workflow-$GITHUB_RUN_ID~1
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Test with gradle
        run: ./gradlew build test jar
        
  build-dotnet:
    runs-on: windows-latest
    needs: prepare
    steps:
      - name: Setup dotNet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 2.1
      - name: Chekout Code
        uses: actions/checkout@v2
      - name: Checkout branch (Windows)
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git fetch
          git checkout -b workflow-$env:GITHUB_RUN_ID origin/workflow-$env:GITHUB_RUN_ID~1
      - name: Build dotNET
        uses: cake-build/cake-action@v1.2.0
        with:
          script-path: csharp/build.cake
      - uses: actions/upload-artifact@v2
        with:
          name: build-dotnet
          path: |
            csharp/EPAM.Deltix.HdTime/bin/Release/

  release:
    name: Release
    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') }}
    needs: [build-java, build-dotnet]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Release branch
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git fetch
          git checkout -b workflow-$GITHUB_RUN_ID origin/workflow-$GITHUB_RUN_ID~1
          versionRelease=`grep 'version=' gradle.properties | sed 's/version=\([^-]*\)/\1/'`
          echo $versionRelease
          git tag $versionRelease
          git push origin $versionRelease
          git push origin origin/workflow-$GITHUB_RUN_ID:$GITHUB_REF
          
  publish-dotnet:
    name: Publish .NET artifiacts
    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') }}
    runs-on: windows-latest
    needs: release
    steps:
      - name: Setup dotNet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 2.1
      - name: Chekout Code
        uses: actions/checkout@v2
      - name: Checkout branch (Windows)
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git fetch
          git checkout -b workflow-$env:GITHUB_RUN_ID origin/workflow-$env:GITHUB_RUN_ID~1
      - name: Publish with Cake
        uses: cake-build/cake-action@v1
        with:
          target: Publish
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

  publish-java:
    name: Publish Maven Java
    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') }}
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Checkout branch
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git fetch
          git checkout -b workflow-$GITHUB_RUN_ID origin/workflow-$GITHUB_RUN_ID~1
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Publish jars
        run: ./gradlew :java:hd-date-time:publish
        env:
          SONATYPE_REPOSITORY: ${{ secrets.SONATYPE_REPOSITORY }}
          SONATYPE_NEXUS_USERNAME:   ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          SONATYPE_NEXUS_PASSWORD:   ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
          SIGNING_PRIVATE_KEY:      ${{ secrets.SIGNING_PRIVATE_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}

  cleanup:
    name: Cleanup
    if: ${{ always() && !contains(github.event.head_commit.message, '[skip-ci]') }}
    needs: [publish-java, publish-dotnet]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cleanup
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git push origin --delete workflow-$GITHUB_RUN_ID || true